samples: "samples.tsv"
units: "units.tsv"
resources: "resources.yaml"
longread_alignment: false

default_container: "docker://hydragenetics/common:0.1.9"

reference:
  fasta: "reference/WASH7P.fna"
  fai: "reference/WASH7P.fna.fai"
  skip_contigs: # contigs to be skipped during mark duplicates and excluded from merged bam
    - "chrM"
  merge_contigs: # contigs to be merged to a single BAM for mark duplicates
    - ".*_random"

bwa_mem:
  amb: "reference/WASH7P.fna.amb"
  ann: "reference/WASH7P.fna.ann"
  bwt: "reference/WASH7P.fna.bwt"
  container: "docker://hydragenetics/bwa_mem:0.7.17"
  pac: "reference/WASH7P.fna.pac"
  sa: "reference/WASH7P.fna.sa"

bwa_mem_realign_consensus_reads:
  container: "docker://hydragenetics/fgbio:2.1.0"

fgbio_call_and_filter_consensus_reads:
  container: "docker://hydragenetics/fgbio:2.1.0"

fgbio_copy_umi_from_read_name:
  container: "docker://hydragenetics/fgbio:2.1.0"

fgbio_group_reads_by_umi:
  container: "docker://hydragenetics/fgbio:2.1.0"

hifiasm:
  container: "docker://hydragenetics/hifiasm:0.19.8"
  extra: ""

happy:
  container: "docker://hydragenetics/hap.py:0.3.15"
  extra: ""

pbmm2_align:
  index: "reference/WASH7P.hifi.mmi"
  preset: "HIFI"
  container: "docker://hydragenetics/pbmm2:1.10"

pbmm2_samtools_sort:
  extra: "--threads 10 -l 9 -m 4G"  # set threads 10, best compression rate l, and maximum mem per thread  m 4G
  container: "docker://hydragenetics/common:1.14.0"

pbmm2_samtools_index:
  extra: "--threads 10 -l 9 -m 4G"  # set threads 10, best compression rate l, and maximum mem per thread  m 4G
  container: "docker://hydragenetics/common:1.14.0"

picard_mark_duplicates:
  container: "docker://hydragenetics/picard:2.25.0"

pbmm2_merge:
  extra: ""

samtools_fastq:
  sort: "-m 1G"

star:
  container: "docker://hydragenetics/star:2.7.10a"
  genome_index: "reference/star_idx/"

